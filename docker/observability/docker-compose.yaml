version: '3'

networks:
  aaron:
    external: true

services:
  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    networks:
      - aaron
    user: "0:0" # Run as root to have access to docker socket
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:9090/
      interval: 3s
      timeout: 3s
      retries: 10
      
  loki:
    image: grafana/loki:latest
    hostname: loki
    networks:
      - aaron    
    volumes:
      - ./loki.yaml:/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3100/ready
      interval: 3s
      timeout: 3s
      retries: 10
      
  promtail:
    image: grafana/promtail:latest
    hostname: promtail
    networks:
      - aaron    
    user: "0:0" # Run as root to have access to docker socket
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail.yaml:/etc/promtail/docker-config.yaml
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      loki:
        condition: service_healthy
      
  tempo:
    image: grafana/tempo:latest
    hostname: tempo
    networks:
      - aaron
    ports:
      - "3200:3200"
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '14250:14250'
      - '14268:14268'
    volumes:
      - ./tempo.yaml:/etc/tempo-local.yaml
    command: -config.file=/etc/tempo-local.yaml
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3200/ready
      interval: 3s
      timeout: 3s
      retries: 10  
      
  grafana:
    image: grafana/grafana:latest
    hostname: grafana
    networks:
      - aaron
    user: "0:0" # Run as root to have access to docker socket
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3000/
      interval: 3s
      timeout: 3s
      retries: 10
